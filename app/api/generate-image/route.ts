import { NextRequest, NextResponse } from "next/server";
import { GoogleGenAI } from "@google/genai";

// Initialize Gemini AI for image generation
const genAI = new GoogleGenAI({
  apiKey: process.env.GOOGLE_GEMINI_API_KEY || "",
});

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { dishName, description, style = "professional" } = body;

    console.log(`ü§ñ AI Image generation request for: "${dishName}"`);

    if (!dishName) {
      return NextResponse.json(
        { error: "Dish name is required" },
        { status: 400 }
      );
    }

    // Check if Gemini API is configured
    if (!process.env.GOOGLE_GEMINI_API_KEY) {
      console.log("‚ö†Ô∏è No Gemini API key configured");
      return NextResponse.json(
        { error: "Gemini API key not configured" },
        { status: 500 }
      );
    }

    try {
      // Create a detailed prompt for food photography
      const prompt = createFoodImagePrompt(dishName, description, style);

      console.log(`üìù Generated prompt: ${prompt}`);

      // Generate image using Gemini 2.5 Flash Image model
      const response = await genAI.models.generateContent({
        model: "gemini-2.5-flash-image-preview",
        contents: prompt,
      });

      // Process the response
      for (const part of response.candidates?.[0]?.content?.parts || []) {
        if (part.inlineData && part.inlineData.data) {
          console.log(`‚úÖ Successfully generated image for "${dishName}"`);

          // Convert base64 to data URL
          const imageUrl = `data:image/png;base64,${part.inlineData.data}`;

          return NextResponse.json({
            imageUrl,
            alt: `AI-generated image of ${dishName}`,
            prompt,
            source: "gemini-generated",
          });
        }

        if (part.text) {
          console.log(`ÔøΩ Gemini response text: ${part.text}`);
        }
      }

      // If we get here, no image was generated
      console.log("‚ùå No image generated in response");
      return NextResponse.json(
        { error: "No image was generated by Gemini" },
        { status: 500 }
      );
    } catch (aiError: any) {
      console.error("üö´ Gemini AI error:", aiError);
      return NextResponse.json(
        {
          error: `AI generation failed: ${aiError?.message || "Unknown error"}`,
        },
        { status: 500 }
      );
    }
  } catch (error) {
    console.error("üí• Image generation error:", error);
    return NextResponse.json(
      { error: "Failed to generate image" },
      { status: 500 }
    );
  }
}

function createFoodImagePrompt(
  dishName: string,
  description?: string,
  style: string = "professional"
): string {
  // Base prompt for high-quality food photography
  let prompt = `A high-resolution, studio-lit professional food photograph of ${dishName}`;

  // Add description if provided
  if (description && description.trim()) {
    prompt += `. ${description}`;
  }

  // Style-specific additions
  const stylePrompts = {
    professional:
      "shot in a professional restaurant kitchen setting with perfect lighting, shallow depth of field, and appetizing presentation",
    rustic:
      "presented in a rustic, homestyle setting with natural lighting and cozy atmosphere",
    elegant:
      "elegantly plated in fine dining style with sophisticated presentation and dramatic lighting",
    casual:
      "in a casual, everyday setting with natural lighting and approachable presentation",
    modern:
      "with modern minimalist plating and clean, contemporary presentation",
  };

  const selectedStyle =
    stylePrompts[style as keyof typeof stylePrompts] ||
    stylePrompts.professional;
  prompt += `, ${selectedStyle}`;

  // Add technical photography details for better results
  prompt += `. The image should be captured with a macro lens, emphasizing textures and details of the food. Perfect focus on the dish with beautiful bokeh in the background. Colors should be vibrant and appetizing. The composition should be centered and well-balanced. Ultra-sharp detail, professional food styling, mouthwatering presentation. 4K quality, restaurant-grade photography.`;

  return prompt;
}

export async function GET() {
  return NextResponse.json({
    status: "Gemini AI Image Generation API",
    configured: !!process.env.GOOGLE_GEMINI_API_KEY,
    model: "gemini-2.5-flash-image-preview",
    capabilities: ["text-to-image", "professional-food-photography"],
  });
}
